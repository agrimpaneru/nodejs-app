version: '3.8'
services:
  nodejs-app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    networks:
      - app-network
    depends_on:
      - mongodb
    environment:
      - MONGO_URI=mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongodb:27017/${MONGO_DB_NAME}?authSource=admin
    env_file:
      - .env
    # Expose the app port for Prometheus to scrape
    expose:
      - "3000"

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - nodejs-app
    networks:
      - app-network
    env_file:
      - .env

  mongodb:
    image: mongo:latest
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    ports:
      - "${MONGO_PORT}:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - app-network
    env_file:
      - .env
      
  mongodb-backup:
    image: mongo:latest
    volumes:
      - ./backup-mongodb.sh:/backup.sh
      - ./local-backups:/backups
    depends_on:
      - mongodb
    networks:
      - app-network
    entrypoint: ["/bin/bash", "-c", "chmod +x /backup.sh && /backup.sh && exit"]
    restart: "no"
    
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - app-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3001:3000"  # Using 3001 on host to avoid conflict with other services
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - app-network
    depends_on:
      - prometheus
networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data:
  mongodb_backups:
  prometheus_data:
  grafana_data: